apply plugin: 'com.android.application'
apply plugin: 'io.objectbox'
apply plugin: 'com.cai.plugin.aspect'
apply plugin: 'com.mob.sdk'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        renderscriptTargetApi 20
        renderscriptSupportModeEnabled true
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        ndk {
            // 设置支持的SO库架构
//            abiFilters 'armeabi' , 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
            abiFilters 'armeabi-v7a'
        }
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
//        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug{

        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility 1.7
        targetCompatibility 1.7
    }

    lintOptions {
        abortOnError false
    }

    dexOptions {
        preDexLibraries = false
    }
    dataBinding {
        enabled true
    }
}
MobSDK {

    appKey "2689d6ba3e0b8"
    appSecret "3fa28f3c934d459253c1136afa8ad747"
    ShareSDK {
//        gui false
        devInfo {
            Wechat { //meetone 专用, 注意 applicationId 要改
                id 1
                sortId 1
                appId "wx683799b37327a2ea"
                appSecret "ee36fdbddc8d79a758afcab3ef8e1808"
            }
            WechatMoments { //meetone 专用, 注意 applicationId 要改
                id 2
                sortId 2
                appId "wx683799b37327a2ea"
                appSecret "ee36fdbddc8d79a758afcab3ef8e1808"
                bypassApproval false
                enable true
            }
            QQ { //meetone 用 注意 applicationId 要改
                id 3
                sortId 3
                appId "101486434"
                appKey "e80fe8ddeb6987e3752ab0d6b08f3e3d"
                bypassApproval false
                enable true
            }
            SinaWeibo { //meetone 专用, 注意 applicationId 要改
                id 4
                sortId 4
                appKey "1698573935"
                appSecret "d5c43f0a81c0ea2cb7e71ccfb5d8d4c0"
                callbackUri "http://www.sharesdk.cn"
                shareByAppClient false
            }
        }
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.tencent.bugly:crashreport:latest.release'
    compile 'com.tencent.bugly:nativecrashreport:latest.release'
//    testCompile rootProject.ext.dependencies["junit"]
//    testCompile rootProject.ext.dependencies["assertj-core"]
//    testCompile rootProject.ext.dependencies["robolectric"]
//    testCompile rootProject.ext.dependencies["robolectric-shadows-support-v4"]
//    testCompile rootProject.ext.dependencies["powermock-module-junit4"]
//    testCompile rootProject.ext.dependencies["powermock-module-junit4-rule"]
//    testCompile rootProject.ext.dependencies["powermock-api-mockito"]
//    testCompile rootProject.ext.dependencies["powermock-classloading-xstream"]

//    annotationProcessor project(':LibAptCompiler')
//    compile project(':LibAnnotation')
    compile project(':LibFrameWork')

    compile rootProject.ext.dependencies["dagger"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]

    compile rootProject.ext.dependencies["objectbox-android"]
    compile rootProject.ext.dependencies["objectbox-rxjava"]

    compile rootProject.ext.dependencies["arouter-api"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]

    compile rootProject.ext.dependencies["support-design"]
    compile rootProject.ext.dependencies["fastjson"]

    compile rootProject.ext.dependencies["easyadapter"]
    compile rootProject.ext.dependencies["qiniu"]
}
