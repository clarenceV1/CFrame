apply plugin: 'com.android.application'
apply plugin: 'io.objectbox'
apply plugin: 'com.cai.plugin.aspect'
apply plugin: 'com.mob.sdk'
android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "one.more"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 4
        versionName '2.1.3.8' //Constant.DEBUG 要改值
        renderscriptTargetApi 20
        renderscriptSupportModeEnabled true
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        ndk {
            // 设置支持的SO库架构
//            abiFilters 'armeabi' , 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86'
        }
    }
    signingConfigs {
        release {
            storeFile file("More")
            storePassword "123456"
            keyAlias "more"
            keyPassword "123456"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        debug {
//            versionNameSuffix "-debug"
            //proguardFile getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.release
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
        }
        release {
            //Constant.DEBUG 要改值
            // 移除无用的resource
            //shrinkResources true,不要开启这个,会错误删除资源;后果是:release会闪退;或者第三方加固之后,有些功能无法正常运行,如商品详情页无法打开;
            // 混淆
            minifyEnabled true
            // Zipalign优化
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
//            versionNameSuffix "-release"
            //自定义apk名字
//            android.applicationVariants.all { variant ->
//                variant.outputs.all {
//                    outputFileName = "MORE.ONE_${variant.versionName}_${releaseTime()}.apk"
////                    outputFileName = "MORE.ONE_${variant.versionName}-release.apk"
//                }
//            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    dexOptions {
        preDexLibraries = false
    }
    dataBinding {
        enabled true
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}
MobSDK {

    appKey "2689d6ba3e0b8"
    appSecret "3fa28f3c934d459253c1136afa8ad747"
    ShareSDK {
//        gui false
        devInfo {
            Wechat { //meetone 专用, 注意 applicationId 要改
                id 1
                sortId 1
                appId "wx683799b37327a2ea"
                appSecret "ee36fdbddc8d79a758afcab3ef8e1808"
            }
            WechatMoments { //meetone 专用, 注意 applicationId 要改
                id 2
                sortId 2
                appId "wx683799b37327a2ea"
                appSecret "ee36fdbddc8d79a758afcab3ef8e1808"
                bypassApproval false
                enable true
            }
            QQ { //meetone 用 注意 applicationId 要改
                id 3
                sortId 3
                appId "101486434"
                appKey "e80fe8ddeb6987e3752ab0d6b08f3e3d"
                bypassApproval false
                enable true
            }
            SinaWeibo { //meetone 专用, 注意 applicationId 要改
                id 4
                sortId 4
                appKey "1698573935"
                appSecret "d5c43f0a81c0ea2cb7e71ccfb5d8d4c0"
                callbackUri "http://www.sharesdk.cn"
                shareByAppClient false
            }
        }
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.tencent.bugly:crashreport:latest.release'
    compile 'com.tencent.bugly:nativecrashreport:latest.release'
//    testCompile rootProject.ext.dependencies["junit"]
//    testCompile rootProject.ext.dependencies["assertj-core"]
//    testCompile rootProject.ext.dependencies["robolectric"]
//    testCompile rootProject.ext.dependencies["robolectric-shadows-support-v4"]
//    testCompile rootProject.ext.dependencies["powermock-module-junit4"]
//    testCompile rootProject.ext.dependencies["powermock-module-junit4-rule"]
//    testCompile rootProject.ext.dependencies["powermock-api-mockito"]
//    testCompile rootProject.ext.dependencies["powermock-classloading-xstream"]

//    annotationProcessor project(':LibAptCompiler')
//    compile project(':LibAnnotation')

    compile rootProject.ext.dependencies["dagger"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]

    compile rootProject.ext.dependencies["objectbox-android"]
    compile rootProject.ext.dependencies["objectbox-rxjava"]

    compile rootProject.ext.dependencies["arouter-api"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]

    compile rootProject.ext.dependencies["support-design"]
    compile rootProject.ext.dependencies["fastjson"]

    compile rootProject.ext.dependencies["easyadapter"]
    compile rootProject.ext.dependencies["qiniu"]

    compile 'com.umeng.sdk:common:latest.integration'
    compile 'com.umeng.sdk:analytics:latest.integration'

//

    if (LibFrameWork != "aar") {
        compile project(':LibFrameWork')
    } else {
        compile(name: 'LibFrameWork-release', ext: 'aar')
        compile(name: 'LibUtils-release', ext: 'aar')
        compile(name: 'LibPullToRefresh-release', ext: 'aar')
        compile(name: 'LibLog-release', ext: 'aar')
        compile files('libs/LibAnnotaion.jar')

        compile rootProject.ext.dependencies["retrofit"]
        compile rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
        compile rootProject.ext.dependencies["retrofit-converter-gson"]

        compile rootProject.ext.dependencies["rxjava2"]
        compile rootProject.ext.dependencies["rxandroid"]

        compile rootProject.ext.dependencies["stetho"]
        compile rootProject.ext.dependencies["stetho-js-rhino"]

        debugCompile rootProject.ext.dependencies["leakcanary-android"]
        releaseCompile rootProject.ext.dependencies["leakcanary-android-no-op"]

        debugCompile rootProject.ext.dependencies["blockcanary-android"]
        releaseCompile rootProject.ext.dependencies["blockcanary-no-op"]

        compile rootProject.ext.dependencies["eventbus"]

        compile rootProject.ext.dependencies["android-support-percent"]
        compile rootProject.ext.dependencies["QR-code"]

        compile rootProject.ext.dependencies["systembartint"]

        compile rootProject.ext.dependencies["okhttp3-logging-interceptor"]
        compile rootProject.ext.dependencies["stetho-okhttp3"]

        compile rootProject.ext.dependencies["glide"]
        compile rootProject.ext.dependencies["android-support"]

        compile rootProject.ext.dependencies["appcompat-v7"]

        compile rootProject.ext.dependencies["aspectjrt"]

        provided rootProject.ext.dependencies["okio"]

        //For Lifecycles, LiveData, and ViewModel
        compile rootProject.ext.dependencies["lifecycle-runtime"]
        compile rootProject.ext.dependencies["lifecycle-extensions"]
        annotationProcessor rootProject.ext.dependencies["lifecycle-compiler"]
    }
}
